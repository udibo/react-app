{
  "tasks": {
    // Builds the application.
    "build": "deno run -A ../build.ts",
    // Builds the application in development mode.
    "build-dev": "export APP_ENV=development NODE_ENV=development && deno task build",
    // Builds the application in production mode.
    "build-prod": "export APP_ENV=production NODE_ENV=production && deno task build",
    // Builds and runs the application in development mode, with hot reloading.
    "dev": "export APP_ENV=development NODE_ENV=development && deno run -A ../dev.ts",
    // Runs the application. Requires the application to be built first.
    "run": "deno run -A ./main.ts",
    // Runs the application in development mode. Requires the application to be built first.
    "run-dev": "export APP_ENV=development NODE_ENV=development && deno task run",
    // Runs the application in production mode. Requires the application to be built first.
    "run-prod": "export APP_ENV=production NODE_ENV=production && deno task run",
    // Runs the tests.
    "test": "export APP_ENV=test NODE_ENV=development && deno test -A --trace-leaks",
    // Runs the tests in watch mode.
    "test-watch": "deno task test --watch",
    // Checks the formatting and runs the linter.
    "check": "deno lint && deno fmt --check",
    // Gets your branch up to date with master after a squash merge.
    "git-rebase": "git fetch origin main && git rebase --onto origin/main HEAD"
  },
  "compilerOptions": {
    "lib": ["esnext", "dom", "dom.iterable", "dom.asynciterable", "deno.ns"],
    "jsx": "react-jsx",
    "jsxImportSource": "react",
    "jsxImportSourceTypes": "@types/react"
  },
  "lint": {
    "exclude": [
      "coverage",
      "public/build",
      "routes/_main.ts",
      "routes/_main.tsx"
    ]
  },
  "fmt": {
    "exclude": ["coverage", "public/build"]
  },
  "imports": {
    "@udibo/http-error": "jsr:@udibo/http-error@0",
    "@udibo/react-app": "../mod.tsx",
    "@udibo/react-app/build": "../build.tsx",
    "@udibo/react-app/dev": "../dev.tsx",
    "@udibo/react-app/server": "../server.tsx",
    "@udibo/react-app/client": "../client.tsx",
    "@udibo/react-app/test-utils": "../test-utils.tsx",
    "@udibo/react-app/global-jsdom": "../global-jsdom.ts",
    "@luca/esbuild-deno-loader": "jsr:@luca/esbuild-deno-loader@0.10",
    "@oak/oak": "jsr:@oak/oak@16",
    "@std/assert": "jsr:@std/assert@1",
    "@std/async": "jsr:@std/async@1",
    "@std/fs": "jsr:@std/fs@0",
    "@std/log": "jsr:@std/log@0",
    "@std/path": "jsr:@std/path@1",
    "@std/testing": "jsr:@std/testing@1",
    "esbuild": "npm:esbuild@0.23",
    "react": "npm:react@18",
    "@types/react": "npm:@types/react@18",
    "react-dom": "npm:react-dom@18",
    "react-error-boundary": "npm:react-error-boundary@4",
    "react-router-dom": "npm:react-router-dom@6",
    "react-helmet-async": "npm:react-helmet-async@2",
    "serialize-javascript": "npm:serialize-javascript@6",
    "@testing-library/react": "npm:@testing-library/react@16",
    "global-jsdom": "npm:global-jsdom@24",
    "@tanstack/query": "npm:@tanstack/query@5"
  }
}
